basePath: /
definitions:
  model.CreatePortfolioRequest:
    properties:
      name:
        example: Portfolio
        type: string
      owner_id:
        example: 518774723
        type: integer
    type: object
  model.DeletePortfolioRequest:
    properties:
      id:
        example: 1
        type: integer
      ownerID:
        example: 518774723
        type: integer
    type: object
  model.UpdatePortfolioRequest:
    properties:
      id:
        example: 1
        type: integer
      new_name:
        example: Portfolio
        type: string
      owner_id:
        example: 518774723
        type: integer
    type: object
  model.User:
    properties:
      firstName:
        example: firstName
        type: string
      id:
        example: 51
        type: integer
      isPremium:
        example: 0
        type: integer
      lastName:
        example: lastName
        type: string
      username:
        example: username
        type: string
    type: object
  schema.CreatePortfolio:
    properties:
      data:
        example: 1
        type: integer
      request:
        example: /api/v1/endpoint
        type: string
      time:
        example: "2023-08-01T00:00:00Z"
        type: string
      title:
        example: success
        type: string
    type: object
  schema.GetPortfolios:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.Portfolio'
        type: array
      request:
        example: /api/v1/endpoint
        type: string
      time:
        example: "2023-08-01T00:00:00Z"
        type: string
      title:
        example: success
        type: string
    type: object
  schema.NoData:
    properties:
      data:
        example: status message
        type: string
      request:
        example: /api/v1/endpoint
        type: string
      time:
        example: "2023-08-01T00:00:00Z"
        type: string
      title:
        example: success
        type: string
    type: object
  schema.Portfolio:
    properties:
      created_at:
        example: "2023-08-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Portfolio
        type: string
      profit:
        example: 1000
        type: number
      updated_at:
        example: "2023-08-01T00:00:00Z"
        type: string
    type: object
  utils.Body:
    properties:
      data: {}
      request:
        type: string
      time:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Authentication
  title: TMA API
  version: "1.0"
paths:
  /api/v1/create-portfolio:
    post:
      consumes:
      - application/json
      description: create portfolio for user
      operationId: create-portfolio
      parameters:
      - description: portfolio info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.CreatePortfolioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.CreatePortfolio'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.NoData'
      security:
      - TGWebAppToken: []
      summary: CreatePortfolio
      tags:
      - Portfolio
  /api/v1/delete-portfolio:
    delete:
      consumes:
      - application/json
      description: delete portfolio
      operationId: delete-portfolio
      parameters:
      - description: portfolio info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.DeletePortfolioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.NoData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.NoData'
      security:
      - TGWebAppToken: []
      summary: DeletePortfolio
      tags:
      - Portfolio
  /api/v1/portfolios/{id}:
    get:
      consumes:
      - application/json
      description: get portfolios
      operationId: get-portfolio
      parameters:
      - description: owner id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GetPortfolios'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.NoData'
      security:
      - TGWebAppToken: []
      summary: GetPortfolios
      tags:
      - Portfolio
  /api/v1/registration:
    post:
      consumes:
      - application/json
      description: Registration new user
      operationId: registration
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Body'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Body'
      summary: Registration
      tags:
      - User
  /api/v1/update-portfolio:
    patch:
      consumes:
      - application/json
      description: update portfolio
      operationId: update-portfolio
      parameters:
      - description: portfolio info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePortfolioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.NoData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.NoData'
      security:
      - TGWebAppToken: []
      summary: UpdatePortfolio
      tags:
      - Portfolio
securityDefinitions:
  TGWebAppToken:
    in: header
    name: TGWebAppToken
    type: apiKey
swagger: "2.0"
